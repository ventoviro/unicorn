{"version":3,"sources":["bootstrap/button-radio.js"],"names":["System","register","_export","_context","defaultOptions","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","length","i","arr2","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_defineProperty","obj","value","setters","execute","selector","buttonClass","activeClass","color","default","ButtonRadio","options","red","_this","this","instance","Constructor","blue","element","u","selectOne","defaultsDeep","wrapper","dataset","fieldInput","querySelector","inputGroup","exists","h","forEach","radio","prepareButton","appendChild","button","radios","firstChild","Set","colors","protoProps","staticProps","syncState","_button$classList","dispatchEvent","arguments","undefined","label","concat","input","id","classList","add","apply","parseClasses","innerHTML","$helper","set","inputs","push","type","display","buttons","style","green","disabled","getAttribute","checked","ele","addEventListener","Event","changed","_this3","_button$classList2","_button$classList3","_button$classList4","_button$classList5","_button$classList6","_button$classList7","get","remove","colorClass","_len","className","_key","join","split","filter","t","el","getBoundedInstance"],"mappings":"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","file":"button-radio.js","sourcesContent":["/**\n * Part of unicorn project.\n *\n * @copyright  Copyright (C) 2021 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nconst defaultOptions = {\n  selector: '.btn-group .radio',\n  buttonClass: 'btn',\n  activeClass: 'active',\n  color: {\n    'default': 'btn-default btn-outline-secondary',\n    green: 'btn-success',\n    red: 'btn-danger',\n    blue: 'btn-primary'\n  }\n};\n\nexport class ButtonRadio {\n  wrapper = null;\n  radios = [];\n  inputs = [];\n  buttons = [];\n  colors = [];\n\n  static handle(el, options = {}) {\n    return u.getBoundedInstance(el, 'button-radio', (el) => {\n      return new this(el, options);\n    });\n  }\n\n  constructor(selector, options) {\n    this.element = u.selectOne(selector);\n    this.options = options = u.defaultsDeep({}, options, defaultOptions);\n    let wrapper = null;\n\n    // Turn radios into btn-group\n\n    if (this.element.dataset.fieldInput != null) {\n      wrapper = this.element;\n    } else {\n      wrapper = this.element.querySelector('[data-field-input]');\n    }\n\n    this.wrapper = wrapper;\n    let inputGroup = wrapper.querySelector('.btn-group');\n    const exists = inputGroup != null;\n\n    if (!inputGroup) {\n      inputGroup = u.h('div', { class: 'btn-group' })\n    }\n\n    this.radios = wrapper.querySelectorAll('.radio');\n\n    this.radios.forEach(radio => {\n      const button = this.prepareButton(radio, exists);\n\n      if (!exists) {\n        inputGroup.appendChild(button);\n      }\n    });\n\n    this.syncState();\n\n    wrapper.insertBefore(inputGroup, wrapper.firstChild);\n\n    wrapper.dispatchEvent(new Event('button-radio.loaded'));\n\n    // Make color elements unique\n    this.colors = [...new Set(this.colors)];\n  }\n\n  prepareButton(radio, exists = false) {\n    const options = this.options;\n\n    const input = radio.querySelector('input');\n    const label = radio.querySelector('label');\n\n    let button = null;\n\n    if (exists) {\n      button = this.wrapper.querySelector(`[data-for=\"${input.id}\"]`);\n      button.classList.add(...this.parseClasses(`${options.buttonClass} ${options.color['default']}`));\n    } else {\n      button = u.h(\n        'button',\n        {\n          type: 'button',\n          class: `${options.buttonClass} ${options.color['default']}`,\n          'data-value': input.value,\n        },\n        `<span>${label.innerHTML}</span>`\n      );\n    }\n\n    u.$helper.set(button, '__unicorn.input', input);\n    this.inputs.push(input);\n    this.buttons.push(button);\n\n    radio.style.display = 'none';\n\n    // Prepare color schema\n    let color = input.dataset.colorClass;\n\n    if (color == null) {\n      switch (input.value) {\n        case '':\n          color = options.color.blue;\n          break;\n\n        case '0':\n          color = options.color.red;\n          break;\n\n        default:\n          color = options.color.green;\n          break;\n      }\n\n      input.dataset.colorClass = color;\n    }\n    \n    this.colors.push(color);\n\n    if (input.disabled || input.getAttribute('readonly') != null) {\n      button.classList.add('disabled');\n      button.disabled = true;\n    }\n\n    if (input.getAttribute('readonly') != null) {\n      button.classList.add('readonly');\n    }\n\n    // Bind event\n    button.addEventListener('click', () => {\n      if (input.getAttribute('disabled') || input.getAttribute('readonly')) {\n        return;\n      }\n\n      const changed = !input.checked;\n\n      if (changed) {\n        this.inputs.forEach((ele) => {\n          ele.checked = false;\n        });\n\n        input.checked = true;\n\n        this.syncState();\n\n        input.dispatchEvent(new Event('change'));\n        input.dispatchEvent(new Event('input'));\n      }\n    });\n\n    return button;\n  }\n\n  syncState() {\n    const options = this.options;\n\n    this.buttons.forEach((button) => {\n      const input = u.$helper.get(button, '__unicorn.input');\n\n      button.classList.add(...this.parseClasses(options.color.default));\n      button.classList.remove(...this.parseClasses(options.activeClass));\n      button.classList.remove(...this.parseClasses(...this.colors));\n\n      if (input.checked) {\n        button.classList.add(...this.parseClasses(options.activeClass));\n        button.classList.add(...this.parseClasses(input.dataset.colorClass));\n        button.classList.remove(...this.parseClasses(options.color.default));\n      }\n    });\n  }\n\n  parseClasses(...className) {\n    className = className.join(' ');\n    return className.split(' ').filter(t => t !== '');\n  }\n}\n"]}