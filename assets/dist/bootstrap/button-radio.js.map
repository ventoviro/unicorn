{"version":3,"sources":["bootstrap/button-radio.ts"],"names":[],"mappings":"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","file":"button-radio.js","sourcesContent":["// @ts-ignore\nconst u = window.u;\n\nconst defaultOptions = {\n  selector: '.btn-group .radio',\n  buttonClass: 'btn',\n  activeClass: 'active',\n  color: {\n    'default': 'btn-default btn-outline-secondary',\n    green: 'btn-success',\n    red: 'btn-danger',\n    blue: 'btn-primary'\n  }\n};\n\nexport class ButtonRadio {\n  wrapper: HTMLElement;\n  element: HTMLElement;\n  radios: HTMLInputElement[] = [];\n  inputs: HTMLInputElement[] = [];\n  buttons: HTMLButtonElement[] = [];\n  colors: string[] = [];\n  options: any = {};\n\n  static handle(el: any, options = {}) {\n    return u.getBoundedInstance(el, 'button-radio', (el) => {\n      return new this(el, options);\n    });\n  }\n\n  constructor(selector: any, options = {}) {\n    this.element = u.selectOne(selector);\n    this.options = options = u.defaultsDeep({}, options, defaultOptions);\n    let wrapper: HTMLElement;\n\n    // Turn radios into btn-group\n\n    if (this.element.dataset.fieldInput != null) {\n      wrapper = this.element;\n    } else {\n      wrapper = this.element.querySelector('[data-field-input]')!;\n    }\n\n    this.wrapper = wrapper;\n    let inputGroup = wrapper.querySelector('.btn-group');\n    const exists = inputGroup != null;\n\n    if (!inputGroup) {\n      inputGroup = u.h('div', { class: 'btn-group' })\n    }\n\n    this.radios = u.selectAll(wrapper.querySelectorAll<HTMLInputElement>('.radio'));\n\n    this.radios.forEach(radio => {\n      const button = this.prepareButton(radio, exists);\n\n      if (!exists) {\n        inputGroup.appendChild(button);\n      }\n    });\n\n    this.syncState();\n\n    wrapper.insertBefore(inputGroup, wrapper.firstChild);\n\n    wrapper.dispatchEvent(new Event('button-radio.loaded'));\n\n    // Make color elements unique\n    this.colors = [...new Set(this.colors)];\n  }\n\n  prepareButton(radio: HTMLInputElement, exists = false) {\n    const options = this.options;\n\n    const input = radio.querySelector('input')!;\n    const label = radio.querySelector('label')!;\n\n    let button: HTMLButtonElement;\n\n    if (exists) {\n      button = this.wrapper.querySelector(`[data-for=\"${input.id}\"]`)!;\n      button.classList.add(...this.parseClasses(`${options.buttonClass} ${options.color['default']}`));\n    } else {\n      button = u.h(\n        'button',\n        {\n          type: 'button',\n          class: `${options.buttonClass} ${options.color['default']}`,\n          'data-value': input.value,\n        },\n        `<span>${label.innerHTML}</span>`\n      );\n    }\n\n    u.$helper.set(button, '__unicorn.input', input);\n    this.inputs.push(input);\n    this.buttons.push(button);\n\n    radio.style.display = 'none';\n\n    // Prepare color schema\n    let color = input.dataset.colorClass || '';\n\n    if (color == null) {\n      switch (input.value) {\n        case '':\n          color = options.color.blue;\n          break;\n\n        case '0':\n          color = options.color.red;\n          break;\n\n        default:\n          color = options.color.green;\n          break;\n      }\n\n      input.dataset.colorClass = color;\n    }\n    \n    this.colors.push(color);\n\n    if (input.disabled || input.getAttribute('readonly') != null) {\n      button.classList.add('disabled');\n      button.disabled = true;\n    }\n\n    if (input.getAttribute('readonly') != null) {\n      button.classList.add('readonly');\n    }\n\n    // Bind event\n    button.addEventListener('click', () => {\n      if (input.getAttribute('disabled') || input.getAttribute('readonly')) {\n        return;\n      }\n\n      const changed = !input.checked;\n\n      if (changed) {\n        this.inputs.forEach((ele) => {\n          ele.checked = false;\n        });\n\n        input.checked = true;\n\n        input.dispatchEvent(new Event('change'));\n        input.dispatchEvent(new Event('input'));\n      }\n    });\n\n    input.addEventListener('change', () => {\n      this.syncState();\n    });\n\n    return button;\n  }\n\n  syncState() {\n    const options = this.options;\n\n    this.buttons.forEach((button) => {\n      const input = u.$helper.get(button, '__unicorn.input');\n\n      button.classList.add(...this.parseClasses(options.color.default));\n      button.classList.remove(...this.parseClasses(options.activeClass));\n      button.classList.remove(...this.parseClasses(...this.colors));\n\n      if (input.checked) {\n        button.classList.add(...this.parseClasses(options.activeClass));\n        button.classList.add(...this.parseClasses(input.dataset.colorClass));\n        button.classList.remove(...this.parseClasses(options.color.default));\n      }\n    });\n  }\n\n  parseClasses(...className: string[]) {\n    const classNameStr = className.join(' ');\n    return classNameStr.split(' ').filter(t => t !== '');\n  }\n}\n"]}