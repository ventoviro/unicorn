const u=window.u,TAB_ITEM_SELECTOR="[data-toggle=tab],[data-bs-toggle=tab],[data-toggle=pill],[data-bs-toggle=pill]";export class LoadTab{constructor(t,e={}){this.storageKey="";let a=t;"object"==typeof t&&(a=e.uid||t.id);const s=this.$element=u.selectOne(t);s?(this.$element=s,this.tabButtons=s.querySelectorAll(TAB_ITEM_SELECTOR),this.storageKey="tab-href-"+this.hashCode(location.href+":"+a),this.options=e,this.bindEvents(),setTimeout((()=>{this.switchTab()}),this.options.delay||0)):console.warn(`[KeepTab] Element ${t} not found.`)}bindEvents(){[].forEach.call(this.tabButtons,(t=>{t.addEventListener("click",(()=>{window.localStorage.setItem(this.storageKey,this.getButtonHref(t))}))}))}getButtonHref(t){return t.dataset.bsTarget||t.dataset.target||t.href}findTabButtonByHref(t){return u.selectAll(this.$element.querySelectorAll(TAB_ITEM_SELECTOR)).filter((e=>e.href===t||(e.dataset.bsTarget===t||e.dataset.target===t))).shift()}activateTab(t){const e=this.findTabButtonByHref(t);e&&new bootstrap.Tab(e).show()}hasTab(t){return null!=this.findTabButtonByHref(t)}switchTab(){if(localStorage.getItem(this.storageKey)){if(!this.hasTab(localStorage.getItem(this.storageKey)||""))return localStorage.removeItem(this.storageKey),!0;const t=localStorage.getItem(this.storageKey)||"";this.activateTab(t)}}hashCode(t){return u.md5(t)}}