{"version":3,"sources":["bootstrap/keep-tab.js"],"names":["LoadTab","selector","options","uid","id","$element","u","selectOne","tabButtons","querySelectorAll","storageKey","hashCode","location","href","bindEvents","setTimeout","switchTab","delay","forEach","call","button","addEventListener","window","localStorage","setItem","getButtonHref","dataset","bsTarget","target","selectAll","filter","shift","tabTrigger","findTabButtonByHref","$ui","bootstrap","tab","show","getItem","hasTab","removeItem","tabhref","activateTab","seperatorIndex","indexOf","singular","substring","plural","text","console","log","md5"],"mappings":"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","sourcesContent":["/**\n * Part of unicorn project.\n *\n * @copyright  Copyright (C) 2021 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\n(() => {\n  class LoadTab {\n    /**\n     * Class init.\n     *\n     * @param {HTMLElement|string} selector\n     * @param {Object}      options\n     *\n     * @constructor\n     */\n    constructor(selector, options = {}) {\n      let uid = selector;\n\n      if (typeof selector === 'object') {\n        uid = options.uid || selector.id;\n      }\n\n      const $element = this.$element = u.selectOne(selector);\n\n      this.$element = $element;\n      this.tabButtons = $element.querySelectorAll('[data-toggle=tab],[data-bs-toggle=tab]');\n\n      this.storageKey = 'tab-href-' + this.hashCode(location.href + ':' + uid);\n      this.options = options;\n\n      this.bindEvents();\n\n      setTimeout(() => {\n        this.switchTab();\n      }, this.options.delay || 0);\n    }\n\n    bindEvents() {\n      [].forEach.call(this.tabButtons, (button) => {\n        button.addEventListener('click', () => {\n          // Store the selected tab href in localstorage\n          window.localStorage.setItem(this.storageKey, this.getButtonHref(button));\n        });\n      });\n    }\n\n    getButtonHref(button) {\n      return button.dataset.bsTarget || button.dataset.target || button.href\n    }\n\n    findTabButtonByHref(href) {\n      return u.selectAll(this.$element.querySelectorAll(`[data-toggle=\"tab\"],[data-bs-toggle=\"tab\"]`))\n        .filter((button) => {\n          if (button.href === href) {\n            return true;\n          }\n\n          if (button.dataset.bsTarget === href) {\n            return true;\n          }\n\n          return button.dataset.target === href;\n        })\n        .shift();\n    }\n\n    /**\n     * Active tab.\n     *\n     * @param {string} href\n     */\n    activateTab(href) {\n      const tabTrigger = this.findTabButtonByHref(href);\n      u.$ui.bootstrap.tab(tabTrigger).show();\n    }\n\n    /**\n     * Has tab.\n     *\n     * @param {string} href\n     *\n     * @returns {*}\n     */\n    hasTab(href) {\n      return this.findTabButtonByHref(href) != null;\n    }\n\n    /**\n     * Switch tab.\n     *\n     * @returns {boolean}\n     */\n    switchTab() {\n      if (localStorage.getItem(this.storageKey)) {\n        // When moving from tab area to a different view\n        if (!this.hasTab(localStorage.getItem(this.storageKey))) {\n          localStorage.removeItem(this.storageKey);\n          return true;\n        }\n\n        // Clean default tabs\n        // u.selectOne(this.$element, '[data-toggle=\"tab\"], [data-bs-toggle=tab]')\n        // this.$element.querySelector('a[data-toggle=\"tab\"]').parent().removeClass('active');\n\n        const tabhref = localStorage.getItem(this.storageKey);\n\n        // Add active attribute for selected tab indicated by url\n        this.activateTab(tabhref);\n\n        // Check whether internal tab is selected (in format <tabname>-<id>)\n        const seperatorIndex = tabhref.indexOf('-');\n\n        if (seperatorIndex !== -1) {\n          const singular = tabhref.substring(0, seperatorIndex);\n          const plural = singular + 's';\n\n          this.activateTab(plural);\n        }\n      }\n    }\n\n    /**\n     * Hash code.\n     *\n     * @param {String} text\n     *\n     * @returns {number}\n     */\n    hashCode(text) {\n      console.log(text);\n      return u.md5(text);\n    }\n  }\n\n  window.LoadTab = LoadTab;\n})();\n"],"file":"keep-tab.js"}