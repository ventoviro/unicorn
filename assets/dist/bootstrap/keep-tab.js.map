{"version":3,"sources":["bootstrap/keep-tab.ts"],"names":[],"mappings":"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","file":"keep-tab.js","sourcesContent":["// @ts-ignore\nconst u = window.u;\n\nconst TAB_ITEM_SELECTOR = '[data-toggle=tab],[data-bs-toggle=tab],[data-toggle=pill],[data-bs-toggle=pill]';\n\nexport class LoadTab {\n  $element: HTMLElement;\n  tabButtons: any;\n  storageKey: string = '';\n  options: any;\n\n  /**\n   * Class init.\n   *\n   * @param {HTMLElement|string} selector\n   * @param {Object}      options\n   *\n   * @constructor\n   */\n  constructor(selector: any, options: any = {}) {\n    let uid = selector;\n\n    if (typeof selector === 'object') {\n      uid = options.uid || selector.id;\n    }\n\n    const $element = this.$element = u.selectOne<HTMLElement>(selector)!;\n\n    if (!$element) {\n      console.warn(`[KeepTab] Element ${selector} not found.`);\n      return;\n    }\n\n    this.$element = $element;\n    this.tabButtons = $element.querySelectorAll(TAB_ITEM_SELECTOR);\n\n    this.storageKey = 'tab-href-' + this.hashCode(location.href + ':' + uid);\n    this.options = options;\n\n    this.bindEvents();\n\n    setTimeout(() => {\n      this.switchTab();\n    }, this.options.delay || 0);\n  }\n\n  bindEvents() {\n    [].forEach.call(this.tabButtons, (button: HTMLAnchorElement) => {\n      button.addEventListener('click', () => {\n        // Store the selected tab href in localstorage\n        window.localStorage.setItem(this.storageKey, this.getButtonHref(button));\n      });\n    });\n  }\n\n  getButtonHref(button: HTMLAnchorElement) {\n    return button.dataset.bsTarget || button.dataset.target || button.href\n  }\n\n  findTabButtonByHref(href: string) {\n    return u.selectAll<HTMLAnchorElement>(this.$element.querySelectorAll<HTMLAnchorElement>(TAB_ITEM_SELECTOR))\n      .filter((button: HTMLAnchorElement) => {\n        if (button.href === href) {\n          return true;\n        }\n\n        if (button.dataset.bsTarget === href) {\n          return true;\n        }\n\n        return button.dataset.target === href;\n      })\n      .shift();\n  }\n\n  /**\n   * Active tab.\n   *\n   * @param {string} href\n   */\n  activateTab(href: string) {\n    const tabTrigger = this.findTabButtonByHref(href);\n\n    if (tabTrigger) {\n      // @ts-ignore\n      (new bootstrap.Tab(tabTrigger)).show();\n    }\n  }\n\n  /**\n   * Has tab.\n   *\n   * @param {string} href\n   *\n   * @returns {*}\n   */\n  hasTab(href: string) {\n    return this.findTabButtonByHref(href) != null;\n  }\n\n  /**\n   * Switch tab.\n   *\n   * @returns {boolean}\n   */\n  switchTab() {\n    if (localStorage.getItem(this.storageKey)) {\n      // When moving from tab area to a different view\n      if (!this.hasTab(localStorage.getItem(this.storageKey) || '')) {\n        localStorage.removeItem(this.storageKey);\n        return true;\n      }\n\n      // Clean default tabs\n      // u.selectOne(this.$element, '[data-toggle=\"tab\"], [data-bs-toggle=tab]')\n      // this.$element.querySelector('a[data-toggle=\"tab\"]').parent().removeClass('active');\n\n      const tabhref = localStorage.getItem(this.storageKey) || '';\n\n      // Add active attribute for selected tab indicated by url\n      this.activateTab(tabhref);\n\n      // Check whether internal tab is selected (in format <tabname>-<id>)\n      // const seperatorIndex = tabhref.indexOf('-');\n      //\n      // if (seperatorIndex !== -1) {\n      //   const singular = tabhref.substring(0, seperatorIndex);\n      //   const plural = singular + 's';\n      //\n      //   this.activateTab(plural);\n      // }\n    }\n  }\n\n  /**\n   * Hash code.\n   */\n  hashCode(text: string): string {\n    return u.md5(text);\n  }\n}\n"]}