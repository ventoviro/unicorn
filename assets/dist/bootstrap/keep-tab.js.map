{"version":3,"sources":["bootstrap/keep-tab.js"],"names":["LoadTab","selector","options","uid","id","$element","u","selectOne","console","warn","tabButtons","querySelectorAll","constructor","TAB_ITEM_SELECTOR","storageKey","hashCode","location","href","bindEvents","setTimeout","switchTab","delay","forEach","call","button","addEventListener","window","localStorage","setItem","getButtonHref","dataset","bsTarget","target","selectAll","filter","shift","tabTrigger","findTabButtonByHref","bootstrap","Tab","show","getItem","hasTab","removeItem","tabhref","activateTab","text","md5"],"mappings":"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","sourcesContent":["/**\n * Part of unicorn project.\n *\n * @copyright  Copyright (C) 2021 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nexport class LoadTab {\n  static TAB_ITEM_SELECTOR = '[data-toggle=tab],[data-bs-toggle=tab],[data-toggle=pill],[data-bs-toggle=pill]';\n\n  /**\n   * Class init.\n   *\n   * @param {HTMLElement|string} selector\n   * @param {Object}      options\n   *\n   * @constructor\n   */\n  constructor(selector, options = {}) {\n    let uid = selector;\n\n    if (typeof selector === 'object') {\n      uid = options.uid || selector.id;\n    }\n\n    const $element = this.$element = u.selectOne(selector);\n\n    if (!$element) {\n      console.warn(`[KeepTab] Element ${selector} not found.`);\n      return;\n    }\n\n    this.$element = $element;\n    this.tabButtons = $element.querySelectorAll(this.constructor.TAB_ITEM_SELECTOR);\n\n    this.storageKey = 'tab-href-' + this.hashCode(location.href + ':' + uid);\n    this.options = options;\n\n    this.bindEvents();\n\n    setTimeout(() => {\n      this.switchTab();\n    }, this.options.delay || 0);\n  }\n\n  bindEvents() {\n    [].forEach.call(this.tabButtons, (button) => {\n      button.addEventListener('click', () => {\n        // Store the selected tab href in localstorage\n        window.localStorage.setItem(this.storageKey, this.getButtonHref(button));\n      });\n    });\n  }\n\n  getButtonHref(button) {\n    return button.dataset.bsTarget || button.dataset.target || button.href\n  }\n\n  findTabButtonByHref(href) {\n    return u.selectAll(this.$element.querySelectorAll(this.constructor.TAB_ITEM_SELECTOR))\n      .filter((button) => {\n        if (button.href === href) {\n          return true;\n        }\n\n        if (button.dataset.bsTarget === href) {\n          return true;\n        }\n\n        return button.dataset.target === href;\n      })\n      .shift();\n  }\n\n  /**\n   * Active tab.\n   *\n   * @param {string} href\n   */\n  activateTab(href) {\n    const tabTrigger = this.findTabButtonByHref(href);\n\n    if (tabTrigger) {\n      (new bootstrap.Tab(tabTrigger)).show();\n    }\n  }\n\n  /**\n   * Has tab.\n   *\n   * @param {string} href\n   *\n   * @returns {*}\n   */\n  hasTab(href) {\n    return this.findTabButtonByHref(href) != null;\n  }\n\n  /**\n   * Switch tab.\n   *\n   * @returns {boolean}\n   */\n  switchTab() {\n    if (localStorage.getItem(this.storageKey)) {\n      // When moving from tab area to a different view\n      if (!this.hasTab(localStorage.getItem(this.storageKey))) {\n        localStorage.removeItem(this.storageKey);\n        return true;\n      }\n\n      // Clean default tabs\n      // u.selectOne(this.$element, '[data-toggle=\"tab\"], [data-bs-toggle=tab]')\n      // this.$element.querySelector('a[data-toggle=\"tab\"]').parent().removeClass('active');\n\n      const tabhref = localStorage.getItem(this.storageKey);\n\n      // Add active attribute for selected tab indicated by url\n      this.activateTab(tabhref);\n\n      // Check whether internal tab is selected (in format <tabname>-<id>)\n      // const seperatorIndex = tabhref.indexOf('-');\n      //\n      // if (seperatorIndex !== -1) {\n      //   const singular = tabhref.substring(0, seperatorIndex);\n      //   const plural = singular + 's';\n      //\n      //   this.activateTab(plural);\n      // }\n    }\n  }\n\n  /**\n   * Hash code.\n   *\n   * @param {String} text\n   *\n   * @returns {number}\n   */\n  hashCode(text) {\n    return u.md5(text);\n  }\n}\n"],"file":"keep-tab.js"}