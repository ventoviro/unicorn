{"version":3,"sources":["bootstrap/keep-tab.js"],"names":["System","register","_export","_context","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","setters","execute","LoadTab","selector","_this","this","options","arguments","undefined","uid","id","$element","u","selectOne","querySelectorAll","storageKey","hashCode","location","href","bindEvents","setTimeout","switchTab","delay","console","warn","concat","protoProps","staticProps","value","_this2","tabButtons","button","localStorage","setItem","getButtonHref","dataset","bsTarget","forEach","filter","addEventListener","shift","tabTrigger","$ui","bootstrap","tab","show","findTabButtonByHref","getItem","hasTab","removeItem","activateTab","tabhref","seperatorIndex","indexOf","plural","substring","text","md5"],"mappings":"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","file":"keep-tab.js","sourcesContent":["/**\n * Part of unicorn project.\n *\n * @copyright  Copyright (C) 2021 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nexport class LoadTab {\n  /**\n   * Class init.\n   *\n   * @param {HTMLElement|string} selector\n   * @param {Object}      options\n   *\n   * @constructor\n   */\n  constructor(selector, options = {}) {\n    let uid = selector;\n\n    if (typeof selector === 'object') {\n      uid = options.uid || selector.id;\n    }\n\n    const $element = this.$element = u.selectOne(selector);\n\n    if (!$element) {\n      console.warn(`[KeepTab] Element ${selector} not found.`);\n      return;\n    }\n\n    this.$element = $element;\n    this.tabButtons = $element.querySelectorAll('[data-toggle=tab],[data-bs-toggle=tab]');\n\n    this.storageKey = 'tab-href-' + this.hashCode(location.href + ':' + uid);\n    this.options = options;\n\n    this.bindEvents();\n\n    setTimeout(() => {\n      this.switchTab();\n    }, this.options.delay || 0);\n  }\n\n  bindEvents() {\n    [].forEach.call(this.tabButtons, (button) => {\n      button.addEventListener('click', () => {\n        // Store the selected tab href in localstorage\n        window.localStorage.setItem(this.storageKey, this.getButtonHref(button));\n      });\n    });\n  }\n\n  getButtonHref(button) {\n    return button.dataset.bsTarget || button.dataset.target || button.href\n  }\n\n  findTabButtonByHref(href) {\n    return u.selectAll(this.$element.querySelectorAll(`[data-toggle=\"tab\"],[data-bs-toggle=\"tab\"]`))\n      .filter((button) => {\n        if (button.href === href) {\n          return true;\n        }\n\n        if (button.dataset.bsTarget === href) {\n          return true;\n        }\n\n        return button.dataset.target === href;\n      })\n      .shift();\n  }\n\n  /**\n   * Active tab.\n   *\n   * @param {string} href\n   */\n  activateTab(href) {\n    const tabTrigger = this.findTabButtonByHref(href);\n    u.$ui.bootstrap.tab(tabTrigger).show();\n  }\n\n  /**\n   * Has tab.\n   *\n   * @param {string} href\n   *\n   * @returns {*}\n   */\n  hasTab(href) {\n    return this.findTabButtonByHref(href) != null;\n  }\n\n  /**\n   * Switch tab.\n   *\n   * @returns {boolean}\n   */\n  switchTab() {\n    if (localStorage.getItem(this.storageKey)) {\n      // When moving from tab area to a different view\n      if (!this.hasTab(localStorage.getItem(this.storageKey))) {\n        localStorage.removeItem(this.storageKey);\n        return true;\n      }\n\n      // Clean default tabs\n      // u.selectOne(this.$element, '[data-toggle=\"tab\"], [data-bs-toggle=tab]')\n      // this.$element.querySelector('a[data-toggle=\"tab\"]').parent().removeClass('active');\n\n      const tabhref = localStorage.getItem(this.storageKey);\n\n      // Add active attribute for selected tab indicated by url\n      this.activateTab(tabhref);\n\n      // Check whether internal tab is selected (in format <tabname>-<id>)\n      const seperatorIndex = tabhref.indexOf('-');\n\n      if (seperatorIndex !== -1) {\n        const singular = tabhref.substring(0, seperatorIndex);\n        const plural = singular + 's';\n\n        this.activateTab(plural);\n      }\n    }\n  }\n\n  /**\n   * Hash code.\n   *\n   * @param {String} text\n   *\n   * @returns {number}\n   */\n  hashCode(text) {\n    return u.md5(text);\n  }\n}\n"]}