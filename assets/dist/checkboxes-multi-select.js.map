{"version":3,"sources":["checkboxes-multi-select.js"],"names":["CheckboxesMultiSelect","selector","options","duration","inputSelector","$element","u","selectOne","Object","assign","defaultOptions","boxes","querySelectorAll","last","selectAll","box","addEventListener","e","select","event","shiftKey","start","indexOf","end","chs","slice","Math","min","max","forEach","call","ele","i","checked"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;uCAEaA,qB;AAYX,uCAAYC,QAAZ,EAAoC;AAAA;;AAAA,cAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAAA,kDAXnB;AACfC,YAAAA,QAAQ,EAAE,GADK;AAEfC,YAAAA,aAAa,EAAE;AAFA,WAWmB;;AAClC,eAAKC,QAAL,GAAgBC,CAAC,CAACC,SAAF,CAAYN,QAAZ,CAAhB;AACA,eAAKC,OAAL,GAAeM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,cAAvB,EAAuCR,OAAvC,CAAf;AACA,eAAKS,KAAL,GAAa,KAAKN,QAAL,CAAcO,gBAAd,CAA+B,KAAKV,OAAL,CAAaE,aAA5C,CAAb;AACA,eAAKS,IAAL,GAAY,KAAZ;AAEAP,UAAAA,CAAC,CAACQ,SAAF,CAAY,KAAKH,KAAjB,EAAwB,UAACI,GAAD,EAAS;AAC/BA,YAAAA,GAAG,CAACC,gBAAJ,CAAqB,OAArB,EAA8B,UAACC,CAAD,EAAO;AACnC,cAAA,KAAI,CAACC,MAAL,CAAYH,GAAZ,EAAiBE,CAAjB;AACD,aAFD;AAGD,WAJD;AAKD;;;;iBAED,gBAAOF,GAAP,EAAYI,KAAZ,EAAmB;AAAA;;AACjB,gBAAI,CAAC,KAAKN,IAAV,EAAgB;AACd,mBAAKA,IAAL,GAAYE,GAAZ;AAEA;AACD;;AAED,gBAAII,KAAK,CAACC,QAAV,EAAoB;AAClB,kBAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWW,OAAX,CAAmBP,GAAnB,CAAd;AACA,kBAAMQ,GAAG,GAAG,KAAKZ,KAAL,CAAWW,OAAX,CAAmB,KAAKT,IAAxB,CAAZ;AAEA,kBAAMW,GAAG,GAAG,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBE,GAAhB,CAAjB,EAAuCG,IAAI,CAACE,GAAL,CAASP,KAAT,EAAgBE,GAAhB,IAAuB,CAA9D,CAAZ;AAEA,iBAAGM,OAAH,CAAWC,IAAX,CAAgBN,GAAhB,EAAqB,UAACO,GAAD,EAAMC,CAAN,EAAY;AAC/BD,gBAAAA,GAAG,CAACE,OAAJ,GAAc,MAAI,CAACpB,IAAL,CAAUoB,OAAxB;AACD,eAFD;AAGD;;AAED,iBAAKpB,IAAL,GAAYE,GAAZ;AACD;;;iBAtCD,gBAAcd,QAAd,EAAsC;AAAA;;AAAA,gBAAdC,OAAc,uEAAJ,EAAI;AACpC,mBAAOI,CAAC,CAACQ,SAAF,CAAYb,QAAZ,EAAsB,UAAC8B,GAAD,EAAS;AACpC,qBAAO,IAAI,MAAJ,CAASA,GAAT,EAAc7B,OAAd,CAAP;AACD,aAFM,CAAP;AAGD","sourcesContent":["/**\n * Part of unicorn project.\n *\n * @copyright  Copyright (C) 2021 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nexport class CheckboxesMultiSelect {\n  defaultOptions = {\n    duration: 100,\n    inputSelector: 'input[type=checkbox][data-role=grid-checkbox]'\n  }\n\n  static handle(selector, options = {}) {\n    return u.selectAll(selector, (ele) => {\n      return new this(ele, options);\n    });\n  }\n\n  constructor(selector, options = {}) {\n    this.$element = u.selectOne(selector);\n    this.options = Object.assign({}, this.defaultOptions, options);\n    this.boxes = this.$element.querySelectorAll(this.options.inputSelector);\n    this.last = false;\n\n    u.selectAll(this.boxes, (box) => {\n      box.addEventListener('click', (e) => {\n        this.select(box, e);\n      });\n    });\n  }\n\n  select(box, event) {\n    if (!this.last) {\n      this.last = box;\n\n      return;\n    }\n\n    if (event.shiftKey) {\n      const start = this.boxes.indexOf(box);\n      const end = this.boxes.indexOf(this.last);\n\n      const chs = this.boxes.slice(Math.min(start, end), Math.max(start, end) + 1);\n\n      [].forEach.call(chs, (ele, i) => {\n        ele.checked = this.last.checked;\n      });\n    }\n\n    this.last = box;\n  }\n}\n"],"file":"checkboxes-multi-select.js"}