System.register([],(function(e,t){"use strict";var i;t&&t.id;return{setters:[],execute:function(){i=window.u,e("CheckboxesMultiSelect",class{static handle(e,t={}){return i.selectAll(e,(e=>new this(e,t)))}constructor(e,t={}){Object.defineProperty(this,"defaultOptions",{enumerable:!0,configurable:!0,writable:!0,value:{duration:100,inputSelector:"input[type=checkbox][data-role=grid-checkbox]"}}),Object.defineProperty(this,"$element",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"options",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"boxes",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"last",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.$element=i.selectOne(e),this.options=Object.assign({},this.defaultOptions,t),this.boxes=this.$element.querySelectorAll(this.options.inputSelector),this.last=!1,i.selectAll(this.boxes,(e=>{e.addEventListener("click",(t=>{this.select(e,t)}))}))}select(e,t){if(this.last){if(t.shiftKey){const t=[].indexOf.call(this.boxes,e),i=[].indexOf.call(this.boxes,this.last),s=[].slice.call(this.boxes,Math.min(t,i),Math.max(t,i)+1);[].forEach.call(s,((e,t)=>{e.checked=this.last.checked}))}this.last=e}else this.last=e}})}}}));