{"version":3,"sources":["ui/checkboxes-multi-select.js"],"names":["System","register","_export","_context","_defineProperty","obj","key","value","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","setters","execute","static","selector","options","arguments","length","u","selectAll","ele","this","constructor","handle","duration","inputSelector","selectOne","assign","defaultOptions","boxes","$element","querySelectorAll","box","addEventListener","e","select","event","shiftKey","start","indexOf","end","last","slice","Math","min","max","forEach","chs","i","checked"],"mappings":"AAAAA,OAAOC,SAAS,IAAI,SAAUC,EAASC,GAOL,SAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAA,SAAAE,GAAA,IAAAF,EAAA,SAAAG,EAAAC,GAAA,GAAA,iBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,QAAAC,IAAAH,EAAA,CAAA,IAAAI,EAAAJ,EAAAK,KAAAP,EAAAC,GAAA,WAAA,GAAA,iBAAAK,EAAA,OAAAA,EAAA,MAAA,IAAAE,UAAA,+CAAA,CAAA,OAAA,WAAAP,EAAAQ,OAAAC,QAAAV,EAAA,CAAAW,CAAAZ,EAAA,UAAA,MAAA,iBAAAF,EAAAA,EAAAY,OAAAZ,EAAA,CAAAe,CAAAf,MAAAD,EAAAiB,OAAAC,eAAAlB,EAAAC,EAAA,CAAAC,MAAAA,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAArB,EAAAC,GAAAC,EAAAF,CAAA,CAAA,OAAAH,EAAA,6BAAA,GAAA,CAAAyB,QAAA,GAAAC,QAAA,WAPlC1B,EAAA,wBAAA,MACA2B,cAAAC,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAnB,IAAAkB,UAAA,GAAAA,UAAA,GAAA,CAAA,EACA,OAAAE,EAAAC,UAAAL,GAAAM,GACA,IAAAC,KAAAD,EAAAL,IAJA,CAaEO,YAAOC,GAA+B,IAAdR,EAAOC,UAAAC,OAAA,QAAAnB,IAAAkB,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjC5B,EAAS+B,KAAUL,iBAAmB,CACpCU,SAAO,IACPC,cAAA,kDAGJH,KAAAA,SAAYR,EAAQY,UAAgBZ,GAAAO,KAAdN,QAAOT,OAAAqB,OAAA,CAAA,EAAAN,KAAAO,eAAAb,GAAKM,KAAAQ,MAAAR,KAAAS,SAAAC,iBAXjBV,KAAAN,QAAAU,eAmBTJ,KAlBNG,MAAU,EAmBJN,EAlBNO,UAAAA,KAAeI,OAAAG,IAChBA,EAAAC,iBAAA,SAAAC,IASKb,KAACS,OAAWZ,EAAEQ,EAAAA,GACd,GAYA,CACAS,OATFhB,EAAAA,GAUI,GATDE,KAACY,KASA,CALR,GAAAG,EAAAC,SAAA,CAEAF,MAAUG,EAAO,GAAEC,QAAAvC,KAAAqB,KAAAQ,MAAAG,GACZQ,EAAS,GAAED,QAAAvC,KAAAqB,KAAAQ,MAAAR,KAAAoB,MACTA,EAAOT,GAAGU,MAAA1C,KAAAqB,KAAAQ,MAAAc,KAAAC,IAAAN,EAAAE,GAAAG,KAAAE,IAAAP,EAAAE,GAAA,GAEf,GAAAM,QAAA9C,KAAA+C,GAAA,CAAA3B,EAAA4B,KACF5B,EAAA6B,QAAA5B,KAAAoB,KAAAQ,OAAA,GASM,CACA5B,KANJoB,KAAST,CAZX,MAOQX,KATJoB,KAAKN,CAqBL,GAEJ,EAEJ","file":"checkboxes-multi-select.js","sourcesContent":["/**\n * Part of unicorn project.\n *\n * @copyright  Copyright (C) 2021 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nexport class CheckboxesMultiSelect {\n  defaultOptions = {\n    duration: 100,\n    inputSelector: 'input[type=checkbox][data-role=grid-checkbox]'\n  }\n\n  static handle(selector, options = {}) {\n    return u.selectAll(selector, (ele) => {\n      return new this(ele, options);\n    });\n  }\n\n  constructor(selector, options = {}) {\n    this.$element = u.selectOne(selector);\n    this.options = Object.assign({}, this.defaultOptions, options);\n    this.boxes = this.$element.querySelectorAll(this.options.inputSelector);\n    this.last = false;\n\n    u.selectAll(this.boxes, (box) => {\n      box.addEventListener('click', (e) => {\n        this.select(box, e);\n      });\n    });\n  }\n\n  select(box, event) {\n    if (!this.last) {\n      this.last = box;\n\n      return;\n    }\n\n    if (event.shiftKey) {\n      const start = [].indexOf.call(this.boxes, box);\n      const end = [].indexOf.call(this.boxes, this.last);\n\n      const chs = [].slice.call(this.boxes, Math.min(start, end), Math.max(start, end) + 1);\n\n      [].forEach.call(chs, (ele, i) => {\n        ele.checked = this.last.checked;\n      });\n    }\n\n    this.last = box;\n  }\n}\n"]}