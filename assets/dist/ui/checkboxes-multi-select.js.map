{"version":3,"sources":["ui/checkboxes-multi-select.js"],"names":["System","register","_export","_context","_defineProperty","obj","key","value","i","t","r","e","Symbol","toPrimitive","call","TypeError","String","Number","_toPrimitive","Object","defineProperty","enumerable","configurable","writable","setters","execute","handle","selector","options","arguments","length","undefined","u","selectAll","ele","this","constructor","duration","inputSelector","$element","selectOne","assign","defaultOptions","boxes","querySelectorAll","last","box","addEventListener","select","event","shiftKey","start","indexOf","end","chs","slice","Math","min","max","forEach","checked"],"mappings":"AAAAA,OAAOC,SAAS,IAAI,SAAUC,EAASC,GAAL,SAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAF,EAAA,iBAAAE,EAAA,SAAAC,EAAAC,GAAA,GAAA,iBAAAD,IAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,QAAA,IAAAF,EAAA,CAAA,IAAAH,EAAAG,EAAAG,KAAAL,EAAAC,GAAA,WAAA,GAAA,iBAAAF,EAAA,OAAAA,EAAA,MAAA,IAAAO,UAAA,+CAAA,CAAA,OAAA,WAAAL,EAAAM,OAAAC,QAAAR,EAAA,CAAAS,CAAAZ,EAAA,WAAAE,EAAAA,EAAA,MAAAH,EAAAc,OAAAC,eAAAf,EAAAC,EAAA,CAAAC,MAAAA,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAlB,EAAAC,GAAAC,EAAAF,CAAA,CAAA,OAAAH,EAAA,6BAAA,GAAA,CAAAsB,QAAA,GAAAC,QAAA,WAAAvB,EAAA,wBAA3B,MAML,aAAOwB,CAAOC,GAAwB,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjC,OAAOG,EAAEC,UAAUN,GAAWO,GACrB,IAAIC,KAAKD,EAAKN,IAEzB,CAEAQ,WAAAA,CAAYT,GAAwB,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAACzB,EAAA+B,KAAA,iBAXjB,CACfE,SAAU,IACVC,cAAe,kDAUfH,KAAKI,SAAWP,EAAEQ,UAAUb,GAC5BQ,KAAKP,QAAUT,OAAOsB,OAAO,CAAC,EAAGN,KAAKO,eAAgBd,GACtDO,KAAKQ,MAAQR,KAAKI,SAASK,iBAAiBT,KAAKP,QAAQU,eACzDH,KAAKU,MAAO,EAEZb,EAAEC,UAAUE,KAAKQ,OAAQG,IACvBA,EAAIC,iBAAiB,SAAUpC,IAC7BwB,KAAKa,OAAOF,EAAKnC,EAAE,GACnB,GAEN,CAEAqC,MAAAA,CAAOF,EAAKG,GACV,GAAKd,KAAKU,KAAV,CAMA,GAAII,EAAMC,SAAU,CAClB,MAAMC,EAAQ,GAAGC,QAAQtC,KAAKqB,KAAKQ,MAAOG,GACpCO,EAAM,GAAGD,QAAQtC,KAAKqB,KAAKQ,MAAOR,KAAKU,MAEvCS,EAAM,GAAGC,MAAMzC,KAAKqB,KAAKQ,MAAOa,KAAKC,IAAIN,EAAOE,GAAMG,KAAKE,IAAIP,EAAOE,GAAO,GAEnF,GAAGM,QAAQ7C,KAAKwC,GAAK,CAACpB,EAAK1B,KACzB0B,EAAI0B,QAAUzB,KAAKU,KAAKe,OAAO,GAEnC,CAEAzB,KAAKU,KAAOC,CAbZ,MAHEX,KAAKU,KAAOC,CAiBhB,GACD,EAAA","file":"checkboxes-multi-select.js","sourcesContent":["export class CheckboxesMultiSelect {\n  defaultOptions = {\n    duration: 100,\n    inputSelector: 'input[type=checkbox][data-role=grid-checkbox]'\n  }\n\n  static handle(selector, options = {}) {\n    return u.selectAll(selector, (ele) => {\n      return new this(ele, options);\n    });\n  }\n\n  constructor(selector, options = {}) {\n    this.$element = u.selectOne(selector);\n    this.options = Object.assign({}, this.defaultOptions, options);\n    this.boxes = this.$element.querySelectorAll(this.options.inputSelector);\n    this.last = false;\n\n    u.selectAll(this.boxes, (box) => {\n      box.addEventListener('click', (e) => {\n        this.select(box, e);\n      });\n    });\n  }\n\n  select(box, event) {\n    if (!this.last) {\n      this.last = box;\n\n      return;\n    }\n\n    if (event.shiftKey) {\n      const start = [].indexOf.call(this.boxes, box);\n      const end = [].indexOf.call(this.boxes, this.last);\n\n      const chs = [].slice.call(this.boxes, Math.min(start, end), Math.max(start, end) + 1);\n\n      [].forEach.call(chs, (ele, i) => {\n        ele.checked = this.last.checked;\n      });\n    }\n\n    this.last = box;\n  }\n}\n"]}