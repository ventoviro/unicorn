{"version":3,"file":"flatpickr-components.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,MCFT,MAAMC,UAAyBC,YAClBC,gBACT,MAAO,eACT,CAIAC,c,UACEC,Q,EAAQ,K,OAAA,G,+SAAA,e,uFACV,CAEIC,eACF,OAAOC,KAAKC,aAAa,aAAe,OAC1C,CAEIC,aACF,OAAOF,KAAKC,aAAa,WAAa,EACxC,CAGAE,aACE,MAAMC,EAAU,CAAC,EACXC,EAAS,CACb,YAWF,OARAL,KAAKM,oBAAoBC,SAASC,KACF,IAA1BH,EAAOI,QAAQD,KAInBJ,EAAQI,GAAQR,KAAKC,aAAaO,GAAK,IAGlCJ,CACT,CAEAM,oBAAoB,MAClB,MAAMN,EAAUO,KAAKC,MAAMZ,KAAKC,aAAa,YAE7CD,KAAKa,cAAcT,GAASU,MAAMV,IAChCJ,KAAKe,SAAWC,UACdhB,KAAKiB,cAAcjB,KAAKD,UACxBK,EACD,IAGgC,QAAnC,EAAAJ,KAAKiB,cAAc,wBAAgB,OAAnC,EAAqCC,iBAAiB,SAAS,KAC7DC,YAAW,KACTnB,KAAKiB,cAAc,gBAAgBG,OAAO,GACzC,EAAE,GAET,CAEAP,cAAcT,GACZ,MAAMiB,EAAW,GAajB,OAXIjB,EAAQkB,aACVD,EAASE,KACPC,EAAEC,OAAO,2CACTD,EAAEE,UAAU,6CAIZ1B,KAAKE,QACPmB,EAASE,KAAKC,EAAEC,OAAQ,mBAAkBzB,KAAKE,cAG7CmB,EAASM,OAAS,EACbC,QAAQC,IAAIR,GAChBP,MAAMgB,IACD1B,EAAQkB,cACVlB,EAAQ2B,QAAU3B,EAAQ2B,SAAW,GAEF,kBAAxB3B,EAAQkB,cACjBlB,EAAQkB,YAAc,CACpBU,WAAW,EACXC,WAAY,MACZC,UAAW,QAIf9B,EAAQ2B,QAAQR,KACd,IAAIY,kBAAkB/B,EAAQkB,eAI9BtB,KAAKE,SACPE,EAAQF,OAASF,KAAKE,OAAOkC,QAAQ,IAAK,MAGrChC,KAINwB,QAAQS,QAAQjC,EACzB,CAEAkC,cACE,OAAOtC,KAAKe,QACd,E,OAGFa,QAAQC,IAAI,CACVL,EAAEC,OAAO,2BACTD,EAAEC,OAAO,8BACRX,MAAMgB,IACP,MAAMS,EAAaT,EAAQ,GAAGU,QAC9BC,SAASC,mBAAqB,IAAID,SAASC,mBAAoBH,GAE/Df,EAAEmB,oBAAoBjD,EAAiBE,GAAIF,EAAiB,I","sources":["webpack://@windwalker-io/unicorn/webpack/universalModuleDefinition","webpack://@windwalker-io/unicorn/./src/modules/ui/flatpickr-components.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","   \n                           \n  \n                                                   \n                          \n   \n\nclass FlatpickrElement extends HTMLElement {\n  static get is() {\n    return 'uni-flatpickr';\n  }\n\n  instance;\n\n  constructor() {\n    super();\n  }\n\n  get selector() {\n    return this.getAttribute('selector') || 'input';\n  }\n\n  get locale() {\n    return this.getAttribute('locale') || '';\n  }\n\n                                                         \n  getOptions() {\n    const options = {};\n    const ignore = [\n      'selector'\n    ];\n\n    this.getAttributeNames().forEach((name) => {\n      if (ignore.indexOf(name) !== -1) {\n        return;\n      }\n\n      options[name] = this.getAttribute(name);\n    });\n\n    return options;\n  }\n\n  connectedCallback() {\n    const options = JSON.parse(this.getAttribute('options'));\n\n    this.handleOptions(options).then((options) => {\n      this.instance = flatpickr(\n        this.querySelector(this.selector),\n        options\n      );\n    });\n\n    this.querySelector('[data-toggle]')?.addEventListener('click', () => {\n      setTimeout(() => {\n        this.querySelector('[data-input]').focus();\n      }, 0);\n    });\n  }\n\n  handleOptions(options) {\n    const promises = [];\n\n    if (options.monthSelect) {\n      promises.push(\n        u.import('@flatpickr/plugins/monthSelect/index.js'),\n        u.importCSS('@flatpickr/plugins/monthSelect/style.css')\n      );\n    }\n\n    if (this.locale) {\n      promises.push(u.import(`@flatpickr/l10n/${this.locale}.js`));\n    }\n\n    if (promises.length > 0) {\n      return Promise.all(promises)\n        .then((modules) => {\n          if (options.monthSelect) {\n            options.plugins = options.plugins || [];\n\n            if (typeof options.monthSelect === 'boolean') {\n              options.monthSelect = {\n                shorthand: true,\n                dateFormat: 'Y-m',\n                altFormat: 'Y-m'\n              };\n            }\n\n            options.plugins.push(\n              new monthSelectPlugin(options.monthSelect)\n            );\n          }\n\n          if (this.locale) {\n            options.locale = this.locale.replace(/-/, '_');\n          }\n\n          return options;\n        });\n    }\n\n    return Promise.resolve(options);\n  }\n\n  getInstance() {\n    return this.instance;\n  }\n}\n\nPromise.all([\n  u.import('@flatpickr/flatpickr.js'),\n  u.import('@flatpickr/flatpickr.css')\n]).then((modules) => {\n  const styleSheet = modules[1].default;                          \n  document.adoptedStyleSheets = [...document.adoptedStyleSheets, styleSheet];\n\n  u.defineCustomElement(FlatpickrElement.is, FlatpickrElement);\n});\n"],"names":["root","factory","exports","module","define","amd","a","i","self","FlatpickrElement","HTMLElement","is","constructor","super","selector","this","getAttribute","locale","getOptions","options","ignore","getAttributeNames","forEach","name","indexOf","connectedCallback","JSON","parse","handleOptions","then","instance","flatpickr","querySelector","addEventListener","setTimeout","focus","promises","monthSelect","push","u","import","importCSS","length","Promise","all","modules","plugins","shorthand","dateFormat","altFormat","monthSelectPlugin","replace","resolve","getInstance","styleSheet","default","document","adoptedStyleSheets","defineCustomElement"],"sourceRoot":""}