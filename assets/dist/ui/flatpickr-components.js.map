{"version":3,"file":"flatpickr-components.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,m+DCFHC,EAAAA,SAAAA,I,mcAOJ,aAAc,M,MAAA,O,4FAAA,S,OAAA,G,EAAA,c,EAAA,EACZ,iB,sFADY,CAEb,C,4BARD,WACE,MAAO,eACR,K,uBAQD,WACE,OAAOC,KAAKC,aAAa,aAAe,OACzC,G,kBAED,WACE,OAAOD,KAAKC,aAAa,WAAa,EACvC,G,wBAGD,WAAa,WACLC,EAAU,CAAC,EACXC,EAAS,CACb,YAWF,OARAH,KAAKI,oBAAoBC,SAAQ,SAACC,IACF,IAA1BH,EAAOI,QAAQD,KAInBJ,EAAQI,GAAQ,EAAKL,aAAaK,GACnC,IAEMJ,CACR,G,+BAED,WAAoB,aACZA,EAAUM,KAAKC,MAAMT,KAAKC,aAAa,YAE7CD,KAAKU,cAAcR,GAASS,MAAK,SAACT,GAChC,EAAKU,SAAWC,UACd,EAAKC,cAAc,EAAKC,UACxBb,EAEH,IAED,UAAAF,KAAKc,cAAc,wBAAnB,SAAqCE,iBAAiB,SAAS,WAC7DC,YAAW,WACT,EAAKH,cAAc,gBAAgBI,OACpC,GAAE,EACJ,GACF,G,2BAED,SAAchB,GAAS,WACfiB,EAAW,GAajB,OAXIjB,EAAQkB,aACVD,EAASE,KACPC,EAAC,OAAQ,2CACTA,EAAEC,UAAU,6CAIZvB,KAAKwB,QACPL,EAASE,KAAKC,EAAC,OAAD,0BAA4BtB,KAAKwB,OAAjC,SAGZL,EAASM,OAAS,EACbC,QAAQC,IAAIR,GAChBR,MAAK,SAACiB,GAqBL,OApBI1B,EAAQkB,cACVlB,EAAQ2B,QAAU3B,EAAQ2B,SAAW,GAEF,kBAAxB3B,EAAQkB,cACjBlB,EAAQkB,YAAc,CACpBU,WAAW,EACXC,WAAY,MACZC,UAAW,QAIf9B,EAAQ2B,QAAQR,KACd,IAAIY,kBAAkB/B,EAAQkB,eAI9B,EAAKI,SACPtB,EAAQsB,OAAS,EAAKA,OAAOU,QAAQ,IAAK,MAGrChC,CACR,IAGEwB,QAAQS,QAAQjC,EACxB,G,yBAED,WACE,OAAOF,KAAKY,QACb,M,gFApGGb,C,EAAyBqC,c,OAuG/BV,QAAQC,IAAI,CACVL,EAAC,OAAQ,2BACTA,EAAC,OAAQ,8BACRX,MAAK,SAACiB,GACP,I,EAAMS,EAAaT,EAAQ,GAAR,QACnBU,SAASC,mBAAT,U,+CAAkCD,SAASC,qB,gkBAA3C,CAA+DF,IAE/Df,EAAEkB,oBAAoBzC,EAAiB0C,GAAI1C,EAC5C,I","sources":["webpack://@windwalker-io/unicorn/webpack/universalModuleDefinition","webpack://@windwalker-io/unicorn/./src/modules/ui/flatpickr-components.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","   \r\n                           \r\n  \r\n                                                   \r\n                          \r\n   \r\n\r\nclass FlatpickrElement extends HTMLElement {\r\n  static get is() {\r\n    return 'uni-flatpickr';\r\n  }\r\n\r\n  instance;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get selector() {\r\n    return this.getAttribute('selector') || 'input';\r\n  }\r\n\r\n  get locale() {\r\n    return this.getAttribute('locale') || '';\r\n  }\r\n\r\n                                                         \r\n  getOptions() {\r\n    const options = {};\r\n    const ignore = [\r\n      'selector'\r\n    ];\r\n\r\n    this.getAttributeNames().forEach((name) => {\r\n      if (ignore.indexOf(name) !== -1) {\r\n        return;\r\n      }\r\n\r\n      options[name] = this.getAttribute(name);\r\n    });\r\n\r\n    return options;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const options = JSON.parse(this.getAttribute('options'));\r\n\r\n    this.handleOptions(options).then((options) => {\r\n      this.instance = flatpickr(\r\n        this.querySelector(this.selector),\r\n        options\r\n      );\r\n    });\r\n\r\n    this.querySelector('[data-toggle]')?.addEventListener('click', () => {\r\n      setTimeout(() => {\r\n        this.querySelector('[data-input]').focus();\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleOptions(options) {\r\n    const promises = [];\r\n\r\n    if (options.monthSelect) {\r\n      promises.push(\r\n        u.import('@flatpickr/plugins/monthSelect/index.js'),\r\n        u.importCSS('@flatpickr/plugins/monthSelect/style.css')\r\n      );\r\n    }\r\n\r\n    if (this.locale) {\r\n      promises.push(u.import(`@flatpickr/l10n/${this.locale}.js`));\r\n    }\r\n\r\n    if (promises.length > 0) {\r\n      return Promise.all(promises)\r\n        .then((modules) => {\r\n          if (options.monthSelect) {\r\n            options.plugins = options.plugins || [];\r\n\r\n            if (typeof options.monthSelect === 'boolean') {\r\n              options.monthSelect = {\r\n                shorthand: true,\r\n                dateFormat: 'Y-m',\r\n                altFormat: 'Y-m'\r\n              };\r\n            }\r\n\r\n            options.plugins.push(\r\n              new monthSelectPlugin(options.monthSelect)\r\n            );\r\n          }\r\n\r\n          if (this.locale) {\r\n            options.locale = this.locale.replace(/-/, '_');\r\n          }\r\n\r\n          return options;\r\n        });\r\n    }\r\n\r\n    return Promise.resolve(options);\r\n  }\r\n\r\n  getInstance() {\r\n    return this.instance;\r\n  }\r\n}\r\n\r\nPromise.all([\r\n  u.import('@flatpickr/flatpickr.js'),\r\n  u.import('@flatpickr/flatpickr.css')\r\n]).then((modules) => {\r\n  const styleSheet = modules[1].default;                          \r\n  document.adoptedStyleSheets = [...document.adoptedStyleSheets, styleSheet];\r\n\r\n  u.defineCustomElement(FlatpickrElement.is, FlatpickrElement);\r\n});\r\n"],"names":["root","factory","exports","module","define","amd","a","i","self","FlatpickrElement","this","getAttribute","options","ignore","getAttributeNames","forEach","name","indexOf","JSON","parse","handleOptions","then","instance","flatpickr","querySelector","selector","addEventListener","setTimeout","focus","promises","monthSelect","push","u","importCSS","locale","length","Promise","all","modules","plugins","shorthand","dateFormat","altFormat","monthSelectPlugin","replace","resolve","HTMLElement","styleSheet","document","adoptedStyleSheets","defineCustomElement","is"],"sourceRoot":""}